How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

By using the "fc" function on the files within the directory it made it immensley 
easier to compare as it took the file from 1000+ lines to spot check to 5-10 lines.
In doing so it made the overall amount of information needed to sift through
much much smaller. It took a few minutes rather than a few hours, and made
the code much easier to look at and explore the various line changes rather than
having to compare line for line the unchanged and changed files.

How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

It means that if there were something that had been changed that caused an 
undesirable change in the file or output, you can easily revert if needed or use
a prior functioning version as a comparison tool to verify that only the essential
changes had been made to correctly have the the program work in the manner you
intended it to.

What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google 
Docs does?

It makes it so that you don't have a massive directory of versions, which is 
inefficient and could be problematic for debugging and comparison. It has benefit
sometimes, however overall deciding when to commit a change and what that commit
should contain I think is best left to the developer themself.

Why do you think some version control systems, like Git, allow saving multiple 
files in one commit, while others, like Google Docs, treat each file separately?

I think it has to do with the type of content that is being saved. In the case
of google docs it is always going to be some form of a document file, science
paper or story etc. However for Git it has multiple files which are working in 
conjunction with each other and it's necessary to keep track of all the files
related to the change at the time of change to monitor them in case something no
longer working, in order to better debug the code and changes.

How can you use the commands git log and git diff to view the history of files?

It allows you to see an overview of changes by using the log and then using diff
you can easily see difference between versions so that you can understand how 
the code developed as a whole or in particular what changes went in to making
the code work under a new set of parameters or to incorporate a new function.

How might using version control make you more confident to make changes that 
could break something?

It allows you to feel confident breaking something trying to improve the code 
because it always allows for a redundancy. And in having this redundancy you can
feel secure that if you mess it up too terribly you can always revert it to the 
fully functioning state you had before you started.

Now that you have your workspace set up, what do you want to try using Git for?

I want to use git to make my code more reliable by means of allowing me to make
commits and not have it feel as though I have no way back. It leaves me wanting 
to know how to successfully use git and integrate it with github.